services:
  # Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: thmanyah
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test:
        ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # CMS API
  cms-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: cms-api
      args:
        TARGET_APP: cms-api
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: thmanyah
      DATABASE_SSL_DISABLED: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_INDEX_NAME: programs
      CMS_API_PORT: 3001
      DISCOVERY_API_PORT: 3002
      # CORS Configuration
      CORS_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:3002
      CORS_ALLOWED_HEADERS: Content-Type,Authorization,X-Requested-With,x-request-id,x-api-version
      # OpenAPI Configuration
      CMS_API_SERVER_URL: http://localhost:3001
      DISCOVERY_API_SERVER_URL: http://localhost:3002
      CMS_API_SERVER_DESCRIPTION: Production server
      DISCOVERY_API_SERVER_DESCRIPTION: Production server
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  # Discovery API
  discovery-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: discovery-api
      args:
        TARGET_APP: discovery-api
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: thmanyah
      DATABASE_SSL_DISABLED: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_INDEX_NAME: programs
      CMS_API_PORT: 3001
      DISCOVERY_API_PORT: 3002
      # CORS Configuration
      CORS_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:3002
      CORS_ALLOWED_HEADERS: Content-Type,Authorization,X-Requested-With,x-request-id,x-api-version
      # OpenAPI Configuration
      CMS_API_SERVER_URL: http://localhost:3001
      DISCOVERY_API_SERVER_URL: http://localhost:3002
      CMS_API_SERVER_DESCRIPTION: Production server
      DISCOVERY_API_SERVER_DESCRIPTION: Production server
    ports:
      - "3002:3002"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  # Outbox Publisher
  outbox-publisher:
    build:
      context: .
      dockerfile: Dockerfile
      target: outbox-publisher
      args:
        TARGET_APP: outbox-publisher
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: thmanyah
      DATABASE_SSL_DISABLED: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_INDEX_NAME: programs
      CMS_API_PORT: 3001
      DISCOVERY_API_PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Sync Worker
  sync-worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: sync-worker
      args:
        TARGET_APP: sync-worker
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: password
      DATABASE_NAME: thmanyah
      DATABASE_SSL_DISABLED: "true"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: elastic
      ELASTICSEARCH_PASSWORD: changeme
      ELASTICSEARCH_INDEX_NAME: programs
      CMS_API_PORT: 3001
      DISCOVERY_API_PORT: 3002
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

volumes:
  postgres_data:
  elasticsearch_data:
